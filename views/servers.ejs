<!DOCTYPE html>
<html>
<% include ./partial/head %>
<body>
	<% include ./partial/navbar %>
	<div class="container">
		<header class="mt-4 mb-3">
			<!-- head -->
			<h1 class="display-5 font-weight-normal">서버 목록</h1>
			<!-- description -->
			<div id="total_num" class="small"></div>
		</header>

		<!-- rank chart -->
		<div class="mt-4 mb-3">
			<div class="border">
				<svg id="rank_chart"></svg>
			</div>
			<div class="form-check">
				<input id="mcberank-toggle-total" type="checkbox" class="form-check-input" onclick="toggleTotal()">
				<label class="form-check-label" for="mcberank-toggle-total">동접 합계 표시</label>
			</div>
		</div>

		<!-- online list -->
		<div class="mt-4 mb-3">
			<table id="online_table" class="table table-sm table-hover">
				<thead class="thead-dark">
					<tr>
						<th scope="col">#</th>
						<th scope="col">서버 이름</th>
						<th scope="col" class="text-right" style="width:3em">동접</th>
					</tr>
				</thead>
				<tbody>
				</tbody>
			</table>
		</div>

		<!-- offline list -->
		<div class="mt-5 mb-3">
			<h2>Offline</h2>
		</div>
		<table id="offline_table" class="table table-sm table-hover">
			<thead class="thead-dark">
				<tr>
					<th scope="col">서버 주소</th>
					<th scope="col" class="text-right">포트</th>
				</tr>
			</thead>
			<tbody></tbody>
		</table>
	</div>

	<% include ./partial/footer %>

	<script type="text/javascript">
		/**
		 * Total
		 */
		d3.json(McbeRank.files.total).then(function(data){
			d3.select('#total_num').text(data.online_servers + '개의 서버가 온라인이며, 총 ' + data.numplayers + '명이 플레이중입니다');
			//$('#total_num').append($('<button>', { class: "btn btn-sm mx-3", text: 'Show total' })
			//	.on('click', function(){ toggleTotal(); }));
		});

		/**
		 * online_table
		 */
		var online_table = d3.select("#online_table");

		d3.json(McbeRank.files.online_servers).then(function(data){
			var rows = online_table.select("tbody")
					.selectAll("tr")
					.data(data)
				.enter().append("tr")
					.on("click", function(d){ window.location.assign("server?host=" + d.address.host + "&port=" + d.address.port); });

			rows.append("td")
				.text(function(d){ return d.rank; });

			var td1 = rows.append("td");
			td1.append("div")
				.attr("class", "d-block font-weight-bold")
				.text(function(d){ return McbeRank.tfclear(d.hostname); });
			td1.append("div")
				.attr("class", "d-block small")
				.text(function(d){ return d.address.host + " : " + d.address.port; });

			var td2 = rows.append("td")
				.attr("class", "text-right");
			td2.append("div")
				.attr("class", "d-block font-weight-bold")
				.text(function(d){ return d.numplayers; });
			td2.append("div")
				.attr("class", "d-block small")
				.text(function(d){ return d.daily_record.numplayers; });

			// data.forEach(function(key, val){
			// 	$('#online_table').find('tbody')
			// 		.append($('<tr>')
			// 			.on('click', function(){ window.location.assign("/server?host=" + val.address.host + "&port=" + val.address.port) } )
			// 			.append($('<td>', { html: key + 1, scope: 'row' }))
			// 			.append($('<td>')
			// 				.append($('<div>', { class: "d-block font-weight-bold", html: val.hostname.replace(/§[0-9a-fk-or]/gi, "") }))
			// 				.append($('<div>', { class: "d-block small", html: val.address.host + ' : ' + val.address.port })))
			// 			.append($('<td>', { class: "text-right" })
			// 				.append($('<div>', { class: "d-block font-weight-bold", html: val.numplayers }))
			// 				.append($('<div>', { class: "d-block small", html: val.daily_record.numplayers }))));
			// });

			/**
			 * mineChart
			 */
			window.chart = new MineChart('#rank_chart');

			for(var i = 0; i < 3; i++){
				chart.add(data[i].address.host + "-" + data[i].address.port);
			}
		});

		function toggleTotal(){
			chart.transition().toggle('total');
		}

		/**
		 * offline_table
		 */
		var offline_table = d3.select("#offline_table");

		d3.json(McbeRank.files.offline_servers).then(function(data){
			var rows = offline_table.select("tbody")
				.selectAll("tr")
					.data(data)
				.enter().append("tr")
					.on("click", function(d){ window.location.assign("server?host=" + d.address.host + "&port=" + d.address.port); });

			rows.append("td")
				.text(function(d){ return d.address.host; });

			rows.append("td")
				.attr("class", "text-right")
				.text(function(d){ return d.address.port; });
				
			// $.each(data, function(key, val){
			// 	$('#offline_table').find('tbody')
			// 		.append($('<tr>')
			// 			.on('click', function(){ window.location.assign("/server?host=" + val.address.host + "&port=" + val.address.port) } )
			// 			.append($('<td>', { html: val.address.host }))
			// 			.append($('<td>', { html: val.address.port, class: "text-right" })));
			// });
		});
	</script>
</body>
</html>
